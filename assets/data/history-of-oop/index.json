{"hash":"4a51177c38ecbd7715723c9c0071daf387996626","data":{"post":{"title":"The Origins of OOP","date":"November 20, 2020","content":"<p>OOP is the most popular of the big three programming paradigms.</p>\n<p>So who invented OOP?</p>\n<p>Well, it's difficult....</p>\n<h2 id=\"beginnings\"><a href=\"#beginnings\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>BEGINNINGS</h2>\n<p>The terms \"object\" and \"oriented\" in the context of object-oriented programming\nwere first used at MIT in the late 50s and early 60s.</p>\n<p>There seems to be some conflicting information on the internet on who invented\nobject-oriented programming.</p>\n<p>The earliest example of object-oriented programming was Sketchpad which was a program written by Ivan Sutherland in 1963.</p>\n<p>On a side note, you should have a look at the <a href=\"https://www.youtube.com/watch?v=YB3saviItTI\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">demo</a>\nof Sketchpad, it's stunning how ahead of it's time this program truly was.</p>\n<h2 id=\"simula\"><a href=\"#simula\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Simula</h2>\n<p>The first object-oriented programming languages (Simula I and SIMULA-67) were\ndeveloped by <strong>Kirsten Nygaard and Ole-Johan Dahl</strong> in the 1960s.</p>\n<p>It is noteworthy that Simula was not inspired by Sketchpad in any way, the development of Simula happened independently of Sketchpad.</p>\n<p>Simula 67, which was released in 1967, had many features we are used to in modern\nobject-oriented programming languages like objects, classes, inheritance,\nsubclasses and so on.</p>\n<p>I found some sample code on Wikipedia <a href=\"#1\">[1]</a> which demonstrates how modern\nSimula looks:</p>\n<pre class=\"shiki\" style=\"background-color: #2e3440ff\"><code><span class=\"line\"><span style=\"color: #d8dee9ff\">Begin\n   Class Glyph;\n      Virtual: Procedure print Is Procedure print;;\n   Begin\n   End;\n\n   Glyph Class Char (c);\n      Character c;\n   Begin\n      Procedure print;\n        OutChar(c);\n   End;\n\n   Glyph Class Line (elements);\n      Ref (Glyph) Array elements;\n   Begin\n      Procedure print;\n      Begin\n         Integer i;\n         For i:= 1 Step 1 Until UpperBound (elements, 1) Do\n            elements (i).print;\n         OutImage;\n      End;\n   End;\n\n   Ref (Glyph) rg;\n   Ref (Glyph) Array rgs (1 : 4);\n\n   ! Main program;\n   rgs (1):- New Char (&#39;A&#39;);\n   rgs (2):- New Char (&#39;b&#39;);\n   rgs (3):- New Char (&#39;b&#39;);\n   rgs (4):- New Char (&#39;a&#39;);\n   rg:- New Line (rgs);\n   rg.print;\nEnd;</span></span></code></pre>\n<p>The reason Simula 67 looks so modern even more than 50 years after its creation\nis the simple fact that Simula 67 heavily influenced Java and C++, among the most popular\nOO languages to date.</p>\n<h2 id=\"the-definition-of-oop\"><a href=\"#the-definition-of-oop\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>The definition of OOP</h2>\n<p>In 1967, influenced by, among others, Sketchpad and Simula <strong>Alan Kay</strong>\ncoined the term \"Object-Oriented Programming\". <a href=\"#2\">[2]</a></p>\n<blockquote>\n<p>I wrote my first program that I would call object-oriented in 1962.\nAnd people have been writing programs in that style even earlier than\nthat.\n-- <cite>Alan Kay</cite> <a href=\"#3\">[3]</a></p>\n</blockquote>\n<p>The definition of OOP that most programmers would come up with today is very different\nfrom the definition of OOP by Alan Kay - the term got \"colonized\" to what it is today. <a href=\"#4\">[4]</a></p>\n<blockquote>\n<p>OOP to me means only messaging, local retention and protection and\nhiding of state-process, and extreme late-binding of all things. It\ncan be done in Smalltalk and in LISP. There are possibly other\nsystems in which this is possible, but I'm not aware of them.\n-- <cite>Alan Kay</cite> <a href=\"#5\">[5]</a></p>\n</blockquote>\n<p>Since the definition of OOP by Alan Kay differs from the understanding we have\nof it today, it's sometimes referred to as \"Message Oriented Programming\" so as not to\nget the two confused.</p>\n<p>If you want more in-depth information about \"Message Oriented Programming\"\n<a href=\"https://ovid.github.io/articles/alan-kay-and-oo-programming.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">here</a>\nis the best explanation of it I could find.</p>\n<h2 id=\"smalltalk\"><a href=\"#smalltalk\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Smalltalk</h2>\n<p>Smalltalk which was created during the 70s is the third object-oriented programming language.\nIt was created at Xerox PARC by a team led by Alan Kay.</p>\n<p>Smalltalk was not only a programming language but also a live dynamic development\nenvironment where you can debug your program while it's running. It's very different\nfrom what programmers are used to nowadays.</p>\n<p><a href=\"https://www.youtube.com/watch?v=eGaKZBr0ga4\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Here</a> is a great talk that\nshows this environment and the workflow one would use when working with Smalltalk.</p>\n<p>The first public release was Smalltalk-80 and had a respectable market share during\nthe 1980s to mid-1990s before getting killed off by Java.</p>\n<p>Smalltalk was very influential and influenced almost all object-oriented programming\nlanguages that followed it.</p>\n<h2 id=\"references\"><a href=\"#references\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>References</h2>\n<p><a id=\"1\" href=\"https://en.wikipedia.org/wiki/Simula\">[1] Simula Wikipedia Entry</a></p>\n<p><a id=\"2\" href=\"https://www.quora.com/What-did-Alan-Kay-mean-by-I-made-up-the-term-object-oriented-and-I-can-tell-you-I-did-not-have-C++-in-mind\">[2] Alan Key's answer on Quora</a></p>\n<p><a id=\"3\" href=\"https://www.youtube.com/watch?v=QjJaFG63Hlo&t=0m55s&ab_channel=YoshikiOhshima\">[3] Seminar with Alan Kay on Object Oriented Programming (VPRI 0246)</a></p>\n<p><a id=\"4\" href=\"https://www.quora.com/What-is-Alan-Kays-definition-of-Object-Oriented\">[4] What is Alan Kay's definition of Object Oriented? Alan Kay's answer on Quora</a></p>\n<a id=\"5\" href=\"http://userpage.fu-berlin.de/~ram/pub/pub_jf47ht81Ht/doc_kay_oop_en\">\n[5] Alan Kay email exchange\n</a>\n","tags":[{"title":"Software Design","path":"/tag/Software%20Design/"}]}},"context":{}}