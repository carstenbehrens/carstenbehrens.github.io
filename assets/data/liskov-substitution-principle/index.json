{"hash":"bfd97fabdd56a55287fea44904eb7fa5c08bd4cb","data":{"post":{"title":"Liskov Substitution Principle in JavaScript and TypeScript","date":"January 6, 2020","content":"<p>In this series of Blog Posts, I will take a look at the SOLID Principles in the context of JavaScript and TypeScript.</p>\n<p><strong>SOLID</strong> is an acronym referring to the SOLID Principles of class design that were\npopularized by Robert C. Martin.</p>\n<p>Usually, these principles get applied to OOP\nlanguages that have classes. JavaScript is different in that it uses prototypal\ninheritance instead of classical inheritance. In the code samples, I will be\nusing the ES6 class syntax because I prefer the new syntax over the ES5 syntax.</p>\n<h2 id=\"the-liskov-substitution-principle\"><a href=\"#the-liskov-substitution-principle\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>THE LISKOV SUBSTITUTION PRINCIPLE</h2>\n<blockquote>\n<p>Derived classes must be substitutable for their base classes.<br>\n<strong>Robert C. Martin</strong></p>\n</blockquote>\n<p>Or</p>\n<blockquote>\n<p>All derivatives must conform to the behavior that clients expect of the base classes that they use.<br>\n<strong>Robert C. Martin</strong></p>\n</blockquote>\n<p>In the context of JavaScript, this means that:</p>\n<ul>\n<li>Methods of a subclass that override methods of a base class must have exactly\nthe same number of arguments.</li>\n<li>Each argument of the overridden method must be the same type as the method of\nthe base class.</li>\n<li>The return type of the overridden method must be the same as the method of\nthe base class.</li>\n<li>The types of exceptions thrown from the overridden method must be the same as\nthe method of the base class.</li>\n</ul>\n<p><strong>The best way to explain the LSP is by showing an example:</strong></p>\n<pre class=\"shiki\" style=\"background-color: #2e3440ff\"><code><span class=\"line\"><span style=\"color: #81A1C1\">class</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #8FBCBB\">Bird</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">{</span></span>\n<span class=\"line\"><span style=\"color: #D8DEE9FF\">  </span><span style=\"color: #88C0D0\">fly</span><span style=\"color: #ECEFF4\">(</span><span style=\"color: #D8DEE9\">speed</span><span style=\"color: #ECEFF4\">)</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">{</span></span>\n<span class=\"line\"><span style=\"color: #D8DEE9FF\">    </span><span style=\"color: #81A1C1\">return</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">`</span><span style=\"color: #A3BE8C\">Flying at </span><span style=\"color: #81A1C1\">${</span><span style=\"color: #D8DEE9\">speed</span><span style=\"color: #81A1C1\">}</span><span style=\"color: #A3BE8C\"> km/h</span><span style=\"color: #ECEFF4\">`</span><span style=\"color: #81A1C1\">;</span></span>\n<span class=\"line\"><span style=\"color: #D8DEE9FF\">  </span><span style=\"color: #ECEFF4\">}</span></span>\n<span class=\"line\"><span style=\"color: #ECEFF4\">}</span></span>\n\n<span class=\"line\"><span style=\"color: #81A1C1\">class</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #8FBCBB\">Eagle</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">extends</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #8FBCBB\">Bird</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">{</span></span>\n<span class=\"line\"><span style=\"color: #D8DEE9FF\">  </span><span style=\"color: #88C0D0\">dive</span><span style=\"color: #ECEFF4\">()</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">{</span></span>\n<span class=\"line\"><span style=\"color: #ECEFF4\">    </span><span style=\"color: #616E88\">// ...</span></span>\n<span class=\"line\"><span style=\"color: #D8DEE9FF\">  </span><span style=\"color: #ECEFF4\">}</span></span>\n\n<span class=\"line\"><span style=\"color: #D8DEE9FF\">  </span><span style=\"color: #88C0D0\">fly</span><span style=\"color: #ECEFF4\">(</span><span style=\"color: #D8DEE9\">speed</span><span style=\"color: #ECEFF4\">)</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">{</span></span>\n<span class=\"line\"><span style=\"color: #D8DEE9FF\">    </span><span style=\"color: #81A1C1\">return</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">`</span><span style=\"color: #A3BE8C\">Soaring through the sky at </span><span style=\"color: #81A1C1\">${</span><span style=\"color: #D8DEE9\">speed</span><span style=\"color: #81A1C1\">}</span><span style=\"color: #ECEFF4\">`</span><span style=\"color: #81A1C1\">;</span></span>\n<span class=\"line\"><span style=\"color: #D8DEE9FF\">  </span><span style=\"color: #ECEFF4\">}</span></span>\n<span class=\"line\"><span style=\"color: #ECEFF4\">}</span></span>\n\n<span class=\"line\"><span style=\"color: #616E88\">// LSP Violation:</span></span>\n<span class=\"line\"><span style=\"color: #81A1C1\">class</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #8FBCBB\">Penguin</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">extends</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #8FBCBB\">Bird</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">{</span></span>\n<span class=\"line\"><span style=\"color: #D8DEE9FF\">  </span><span style=\"color: #88C0D0\">fly</span><span style=\"color: #ECEFF4\">()</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">{</span></span>\n<span class=\"line\"><span style=\"color: #D8DEE9FF\">    </span><span style=\"color: #81A1C1\">return</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">new</span><span style=\"color: #D8DEE9FF\"> Error(</span><span style=\"color: #ECEFF4\">&quot;</span><span style=\"color: #A3BE8C\">Sorry, I cant fly</span><span style=\"color: #ECEFF4\">&quot;</span><span style=\"color: #D8DEE9FF\">)</span><span style=\"color: #81A1C1\">;</span></span>\n<span class=\"line\"><span style=\"color: #D8DEE9FF\">  </span><span style=\"color: #ECEFF4\">}</span></span>\n<span class=\"line\"><span style=\"color: #ECEFF4\">}</span></span></code></pre>\n<p>In this example, the Eagle class overrides the fly method this does not violate\nthe LSP because the new methods signature is compatible with the base class\nmethod. Methods of a subclass that override methods of a base class must have the same number of arguments. The LSP <strong>does not</strong> insists that the return value of an overridden method also has to be the same.</p>\n<p>The Penguin class violates the LSP in three ways:</p>\n<ol>\n<li>The overridden fly method does not have the same number of arguments.</li>\n<li>The return type of the fly method is not the same.</li>\n<li>The types of exceptions thrown are not the same.</li>\n</ol>\n","tags":[{"title":"JavaScript","path":"/tag/JavaScript/"},{"title":"Software Design","path":"/tag/Software%20Design/"}]}},"context":{}}