{"hash":"e16787398f177d756f6fa141894c924c15350319","data":{"post":{"title":"Dependency Inversion Principle in JavaScript and TypeScript","date":"January 15, 2020","content":"<p>In this series of Blog Posts, I will take a look at SOLID Principles in the context of JavaScript.</p>\n<p><strong>SOLID</strong> is an acronym referring to the SOLID Principles of class design that were\npopularized by Robert C. Martin.</p>\n<p>Usually, these principles get applied to OOP languages that have classes. JavaScript is different in that it uses prototypal\ninheritance instead of classical inheritance. In the code samples, I will be\nusing ES6 classes because I prefer the new syntax over the ES5 syntax.</p>\n<h2 id=\"the-dependency-inversion-principle\"><a href=\"#the-dependency-inversion-principle\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>THE DEPENDENCY INVERSION PRINCIPLE</h2>\n<blockquote>\n<p>Modules that encapsulate high-level policy should not depend upon modules\nthat implement details. Rather, both kinds of modules should depend upon\nabstractions.\n<strong>Robert C. Martin</strong>\nOr in a more simple way:\nA. High-level modules should not depend on low-level modules. Both should depend on abstractions.\nB. Abstractions should not depend upon details. Details should depend upon abstractions.</p>\n</blockquote>\n<p>This means that an abstraction (interface or abstract class) should not depend\non a detail (concrete classes).</p>\n<p>The goal of the DIP is to decouple high-level modules from low-level modules.\nThis safeguards the higher-level components from possibly breaking changes in\nlower-level modules.</p>\n<p>The best way to explain the DIP is to look at the flow of control of an exemplary\nprogram. Let's say we have a program that fetches weather data from a weather API.</p>\n<p>The simplified code for a class of such program might look like this:</p>\n<pre class=\"shiki\" style=\"background-color: #2e3440ff\"><code><span class=\"line\"><span style=\"color: #81A1C1\">import</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #8FBCBB\">CustomHTTPClient</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">from</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">&quot;</span><span style=\"color: #A3BE8C\">CustomHTTPClient</span><span style=\"color: #ECEFF4\">&quot;</span><span style=\"color: #81A1C1\">;</span></span>\n\n<span class=\"line\"><span style=\"color: #81A1C1\">class</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #8FBCBB\">WeatherProvider</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">{</span></span>\n<span class=\"line\"><span style=\"color: #D8DEE9FF\">  </span><span style=\"color: #81A1C1\">constructor</span><span style=\"color: #ECEFF4\">(</span><span style=\"color: #D8DEE9\">httpClient</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">=</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #D8DEE9\">CustomHTTPClient</span><span style=\"color: #ECEFF4\">)</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">{</span></span>\n<span class=\"line\"><span style=\"color: #D8DEE9FF\">    </span><span style=\"color: #81A1C1\">this</span><span style=\"color: #ECEFF4\">.</span><span style=\"color: #D8DEE9\">httpClient</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">=</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #D8DEE9\">httpClient</span><span style=\"color: #81A1C1\">;</span></span>\n<span class=\"line\"><span style=\"color: #D8DEE9FF\">  </span><span style=\"color: #ECEFF4\">}</span></span>\n\n<span class=\"line\"><span style=\"color: #D8DEE9FF\">  </span><span style=\"color: #88C0D0\">getWeather</span><span style=\"color: #ECEFF4\">()</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">{</span></span>\n<span class=\"line\"><span style=\"color: #D8DEE9FF\">    </span><span style=\"color: #81A1C1\">return</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">this</span><span style=\"color: #ECEFF4\">.</span><span style=\"color: #D8DEE9\">httpClient</span><span style=\"color: #ECEFF4\">.</span><span style=\"color: #88C0D0\">get</span><span style=\"color: #D8DEE9FF\">(</span><span style=\"color: #ECEFF4\">&quot;&quot;</span><span style=\"color: #D8DEE9FF\">)</span><span style=\"color: #81A1C1\">;</span></span>\n<span class=\"line\"><span style=\"color: #D8DEE9FF\">  </span><span style=\"color: #ECEFF4\">}</span></span>\n<span class=\"line\"><span style=\"color: #ECEFF4\">}</span></span></code></pre>\n<p>In this example we use a constructor function to provide a CustomHTTPClient to our\nWeatherProvider class. The HTTPClient then gets used in the getWeather method\nto get some data from some API.</p>\n<p>The flow of control looks like this:</p>\n<p><img class=\"g-image g-image--lazy g-image--loading\" src=\"data:image/svg+xml,%3csvg fill='none' viewBox='0 0 541 141' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e%3cdefs%3e%3cfilter id='__svg-blur-ddc14263ae96f8e4b3c3072daa00ed4b'%3e%3cfeGaussianBlur in='SourceGraphic' stdDeviation='40'/%3e%3c/filter%3e%3c/defs%3e%3cimage x='0' y='0' filter='url(%23__svg-blur-ddc14263ae96f8e4b3c3072daa00ed4b)' width='541' height='141' xlink:href='data:image/png%3bbase64%2ciVBORw0KGgoAAAANSUhEUgAAAEAAAAARCAYAAABtu6qMAAAACXBIWXMAAAsSAAALEgHS3X78AAAC2ElEQVRYw%2b1XWU/bQBDO/3%2bq1Ar1iKBCpUBTUIpRARXlAV6aHjkoOZykviDNwZnGtx1/nd0kjqGBhpI%2bVGSlLzs7Xu98/nZ27MTwwFtsJsBMgFELgiDs/xbRdabVpsHrJm6xcUGmQXbarf8Q0xHxjxnguD500%2bUwLOoH4LYZsa/5e73bd%2bouu3h17pBbEMYyrGs8OF9ngMgc6i3bu3FzYuMevnRsoHBko/zDpd7iKB7bKGgm9zH7kOwi8w%2buf9MsKC1zsBb%2byRE4uWRxLZTqDo/PuQ14MF5iw%2bNgNpvT503cVAMdw53sCDDF2MOzhXJSB7V2gGqrxxeUToFs7ZILwOxhQDan3PBRJuEQ9CgTxoPF8DwP3W4XlmXBtm0O5ut0OnAcB6ZpwnVdPnd0bwDfc6C2dC70oapDOgMqTT/kka1d4FOpRWjja%2bUMB/JP4h1wbgeazcWbWACmYKZ6jifzCcSXNvHo2TLirzcxt7CGhdVtzK9sYUXYw9zLNTyOr0JIZVChYNlKG4osQVGU3yDLMjRNQ7FYRDKZRDqdhiAI2N/fRy6XQyKRwO7uLlKpFERRhKqq/B5JktBoNCFsvMPy%2bg4%2bFppY30kTh/d4upjE81cbWHizTby2iEcWKxt7WHz7AS%2bIN%2bMcXxKQLp3iXPfulgHVlo88ZUCmeobP5TZXmClbqtuUUjoytXN8EU%2b5j6Wh2OxBrBsTpTTbZZYBhmGEYFmh6zq3xzXPdSA3upxblsc%2b4fEZ8rTbBc2gjXNQoWwoHJl9P/HPfb9ATjFx0nEmE4DVgKKm40Cl83XsULrTma%2b7oc1TkEjwcb1/jY1ZELlpTFToJqv4I/QiNSBPcYZxhygcOZwD4zbkF3KmPq9QDdDdO7wFPJ8qqAeTqqcxqLRszHrm4/7IteHYp/N6U7W9z1sgal/l5F7hFEXIi3rL8UbF%2bX/%2bDrjf/fz39tfgg/4SnP0XmAnwMNsvzxma/CYkM3wAAAAASUVORK5CYII=' /%3e%3c/svg%3e\" width=\"541\" alt=\"diagram\" data-srcset=\"/assets/static/flow-of-control-1.a6cf1b2.2c66365dfba1df188e464bf4fd9c916a.png 541w\" data-sizes=\"(max-width: 541px) 100vw, 541px\" data-src=\"/assets/static/flow-of-control-1.a6cf1b2.2c66365dfba1df188e464bf4fd9c916a.png\"><noscript><img class=\"g-image g-image--lazy g-image--loaded\" src=\"/assets/static/flow-of-control-1.a6cf1b2.2c66365dfba1df188e464bf4fd9c916a.png\" width=\"541\" alt=\"diagram\"></noscript></p>\n<p>This means that <strong>a high-level module depends on a low-level module</strong>. The question\nyou have to ask yourself is: Do I want my high-level policy to be polluted by\nlow-level detail?</p>\n<p>Now imagine that CustomHTTPClient itself depends on other modules which themselves\ndepend on even lower-level modules. A change in one of the low-level modules could\nbreak modules that depend on it.\n<img class=\"g-image g-image--lazy g-image--loading\" src=\"data:image/svg+xml,%3csvg fill='none' viewBox='0 0 811 171' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e%3cdefs%3e%3cfilter id='__svg-blur-c15e60561343c4cff3a7eea75c2868f1'%3e%3cfeGaussianBlur in='SourceGraphic' stdDeviation='40'/%3e%3c/filter%3e%3c/defs%3e%3cimage x='0' y='0' filter='url(%23__svg-blur-c15e60561343c4cff3a7eea75c2868f1)' width='811' height='171' xlink:href='data:image/png%3bbase64%2ciVBORw0KGgoAAAANSUhEUgAAAEAAAAANCAYAAAAZr2hsAAAACXBIWXMAAAsSAAALEgHS3X78AAADNklEQVRIx91WZ3PaQBD1//8v6ZM4iWOP44YBgwEbiWKDKUEgIURTLy%2b7J4niTCbG%2bcbNLNd29%2b097d1yAGpRFMHzQzheAMdNxAu25yRBGLG20H%2bN%2bEGK4cNOMDw/gptg27TOOkj0w3C9txXXxjjY0Oc%2bCMM/Y382Zp9Cn9oB//Dhq10T0i8XNSVAnUSmsdTnuU9zH/c9F33dwf%2b01tBGlfzUhzFGte%2bg1Jqj0jEFnjwI0FRsRIm%2b4wN3HYvicERctYFPet5GTA6eVHsLYzj1UOnaiY2/ZcNjPiPjMQkrApgVPuzhWQXvvufw/iiHDz9u8PX8Dp9PS7SWFYE2%2b3OooyE0TYOqsqjQdR2NRgPFYlGILMvIZDKoVqtQFEXoGIaBm0IBl6UnnOSa5DuPLz/L%2bHRSxFFGFhg8/nhcQKU1xYhsxpqK04trlNtLHF1JYv8428Dbb1kx5pjyNQ2N/hIjimlCGLIs4Swvo6UDhxQ76327qAq/jPfm8Ao3NZWIjjNwRYBLBJSfLOQbU1xVVRINufoE%2beYU1/IYGUlDoWWiw2xHIaXmtvi%2bD8uyYNu26E3TFH0QBGKf081xHEjdBTKyjsv7kfDLeKW2icLDPMEZUyYuk7QOMZmZuG3HcfFerm4gW9OTGFUUWxYelDQmumK%2bi/ZwiXLHJRtDxM19ls7CZ2KbEp2TffJHXxHAAc4tnyTEwomEzO0wntvxfGr6K6PXNssNhd8lYyT%2bZ2ZAfSBweM901hh8FWaEy%2bvpPtulMXJMVvIlkystUttYerEvF1ANE4o2g%2blB%2bGA89rl6A9LBS1usv9vjt7Z7Kcau%2bn/HcGzKTMvcoHTbbpUBux7mpQHGutiJNDzD2Y3gaHU1uY3HY0iSJMbp%2bqbNAfagbRKhzz1RSdoqVS0DaAwsFGpD9CYRWiMXj0OHxI7LbfoG7AcB8dfvaVT%2bhiGVT5MqTB1nt13k6OXn/r5roTkKqQza24/gvhEgKyGVzwWOc4/i4BflPs5LPao4CzSIgPJ%2bEhBfAa4M/Oeor3tQphEG0xADIyAJ0aO1LhHEJMX/aveEgPTxW7/LcaXi/wdbkq5jHx/BpH6m1%2bHfEpPwG%2bj4o83rI09CAAAAAElFTkSuQmCC' /%3e%3c/svg%3e\" width=\"811\" alt=\"diagram\" data-srcset=\"/assets/static/flow-of-control-2.82a2fbd.5210a1cb5e53368e0b3a88afd53d4f2f.png 480w, /assets/static/flow-of-control-2.19a62fd.5210a1cb5e53368e0b3a88afd53d4f2f.png 811w\" data-sizes=\"(max-width: 811px) 100vw, 811px\" data-src=\"/assets/static/flow-of-control-2.19a62fd.5210a1cb5e53368e0b3a88afd53d4f2f.png\"><noscript><img class=\"g-image g-image--lazy g-image--loaded\" src=\"/assets/static/flow-of-control-2.19a62fd.5210a1cb5e53368e0b3a88afd53d4f2f.png\" width=\"811\" alt=\"diagram\"></noscript></p>\n<p>To stop this from happening we need to <strong>invert</strong> the dependency. Basically, we will\nadd an interface between the two classes.</p>\n<p>Afterward, the flow of control should look\nlike this:</p>\n<p><img class=\"g-image g-image--lazy g-image--loading\" src=\"data:image/svg+xml,%3csvg fill='none' viewBox='0 0 541 141' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e%3cdefs%3e%3cfilter id='__svg-blur-fbd0995e130ea272899df3ee65c82449'%3e%3cfeGaussianBlur in='SourceGraphic' stdDeviation='40'/%3e%3c/filter%3e%3c/defs%3e%3cimage x='0' y='0' filter='url(%23__svg-blur-fbd0995e130ea272899df3ee65c82449)' width='541' height='141' xlink:href='data:image/png%3bbase64%2ciVBORw0KGgoAAAANSUhEUgAAAEAAAAARCAYAAABtu6qMAAAACXBIWXMAAAsSAAALEgHS3X78AAADgklEQVRYw%2b1XaVPTUBTln/vR8ZuOygiyuIMLgwgK44pVRFG60dLQAmlDC6WUYiVLk6Y53nuTllRwBPWDDryZO/e%2b7dzzzlvS9uCUl54zAc4EOCie53X871p4/r%2bEFcY4UoCfDThpCc//21h/AvdLAcKdtuNCNx0xwyIfmMRmKP6hvdU6vGtuq0X9TRmzb9o0LjCqm7YLy/HEG41mgGPLOKfpHsKiWieXYf3Aw3QOsMPcyVuE/bMN6Tlq8ZmigfRGA8qmQ94SWy42kNZMaeM4RfEytwf9S5qF/LYZYB0kKFQsJFQdmZKNXMVDtuyKMcZidhcf02Us5mpIqvvSlttuQdlqIrOhdwnKZecr57UEi/MLt4AH81qheWwc8xifN3ErGKgbzvGuACvGi2eg%2bHodq0SaSTHgehWIrX4Vohy3E/IYZcuFQsLBaxFx3yzLkraZuWWMzczj5sPnGBqdxuiTiMQPns5h%2bl0KIxNvcWf8Na7fnRQ/OhlBijjU9w3CcQWLd1%2brmLQYC6mCjvVdiJBtHrHVPSxktskqImxS/Ua8PeGW1Boi3rEFYAWjtCtXhh5i4O4ULvaNYODeFHqHxzB8f8ZfBJHsvTGGywP3Mfk6iiwli2UryKvrUFUVxWIRg4ODeDmfIUFNzCWLeBcr0IKX8CyyhJcfs3jzeQ2RaJ5OwZb0R6j/fVyTRURJ6Ku916AoCgqaJrip1S3MLuYx/nyBODzDtVuP0X/nCYYfzBCvaeIRE3FvPXpBYk4J5wES9VOmiprePNkJyG27SNAJiOZ28VmpiMKsbKbUoF3QiWANX1aq0sbHcKXcwkrJ6AI3DENOwNoOZKc2qXtqNo5L/SO4cGkIfbcncO78ZaqPYuLVIkq6Py5fg1ypvfq%2b7Hy7bFQtuQIxyb0j%2bdkStNtpjXJt2sjSaWDBpZ34x9f2EM%2bb2KnbxxOA34BlTUeSjlq6aNNxpztfcjoxE%2bPjKfWS38d1TqKWjUMPl1o2EVcNJPNkdBdja9/wJVvDglKVmP2HVJkErUs/j0sQVpo4BE8AeT%2bo7FnS187btvSGLRyYW5tfhzP5BGHWdecEXwF6gfnlNoOX2Tc/5jZpD/W1667c1bAAnv8VCOawWfTiN5wWmRfEHuXz4zC20/Tvffjzx3E3J6eLU9g6vMhbdvPgcf6ffwf8GRa6rtORApzqX4Jn/wXOBDid5TuiFnsnNY%2bdYAAAAABJRU5ErkJggg==' /%3e%3c/svg%3e\" width=\"541\" alt=\"diagram\" data-srcset=\"/assets/static/flow-of-control-3.a6cf1b2.b98f6d3b63e5820068902c02021eabfd.png 541w\" data-sizes=\"(max-width: 541px) 100vw, 541px\" data-src=\"/assets/static/flow-of-control-3.a6cf1b2.b98f6d3b63e5820068902c02021eabfd.png\"><noscript><img class=\"g-image g-image--lazy g-image--loaded\" src=\"/assets/static/flow-of-control-3.a6cf1b2.b98f6d3b63e5820068902c02021eabfd.png\" width=\"541\" alt=\"diagram\"></noscript></p>\n<p>To do this correctly we need to change our code example to Typescript, since\nJavascript does not have an interface language feature.</p>\n<pre class=\"shiki\" style=\"background-color: #2e3440ff\"><code><span class=\"line\"><span style=\"color: #81A1C1\">interface</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #8FBCBB\">IhttpClient</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">{</span></span>\n<span class=\"line\"><span style=\"color: #D8DEE9FF\">  </span><span style=\"color: #88C0D0\">get</span><span style=\"color: #ECEFF4\">(</span><span style=\"color: #D8DEE9\">arg0</span><span style=\"color: #81A1C1\">:</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #8FBCBB\">string</span><span style=\"color: #ECEFF4\">)</span><span style=\"color: #81A1C1\">:</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #8FBCBB\">Promise</span><span style=\"color: #ECEFF4\">&lt;</span><span style=\"color: #8FBCBB\">IhttpClient</span><span style=\"color: #ECEFF4\">&gt;</span><span style=\"color: #81A1C1\">;</span></span>\n<span class=\"line\"><span style=\"color: #ECEFF4\">}</span></span>\n\n<span class=\"line\"><span style=\"color: #81A1C1\">class</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #8FBCBB\">WeatherProvider</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">{</span></span>\n<span class=\"line\"><span style=\"color: #D8DEE9FF\">  httpClient</span><span style=\"color: #81A1C1\">:</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #8FBCBB\">IhttpClient</span><span style=\"color: #81A1C1\">;</span></span>\n\n<span class=\"line\"><span style=\"color: #D8DEE9FF\">  </span><span style=\"color: #81A1C1\">constructor</span><span style=\"color: #ECEFF4\">(</span><span style=\"color: #D8DEE9\">httpClient</span><span style=\"color: #81A1C1\">:</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #8FBCBB\">IhttpClient</span><span style=\"color: #ECEFF4\">)</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">{</span></span>\n<span class=\"line\"><span style=\"color: #D8DEE9FF\">    </span><span style=\"color: #81A1C1\">this</span><span style=\"color: #ECEFF4\">.</span><span style=\"color: #D8DEE9\">httpClient</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">=</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #D8DEE9\">httpClient</span><span style=\"color: #81A1C1\">;</span></span>\n<span class=\"line\"><span style=\"color: #D8DEE9FF\">  </span><span style=\"color: #ECEFF4\">}</span></span>\n\n<span class=\"line\"><span style=\"color: #D8DEE9FF\">  </span><span style=\"color: #88C0D0\">getWeather</span><span style=\"color: #ECEFF4\">()</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">{</span></span>\n<span class=\"line\"><span style=\"color: #D8DEE9FF\">    </span><span style=\"color: #81A1C1\">return</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">this</span><span style=\"color: #ECEFF4\">.</span><span style=\"color: #D8DEE9\">httpClient</span><span style=\"color: #ECEFF4\">.</span><span style=\"color: #88C0D0\">get</span><span style=\"color: #D8DEE9FF\">(</span><span style=\"color: #ECEFF4\">&quot;</span><span style=\"color: #A3BE8C\">some api url</span><span style=\"color: #ECEFF4\">&quot;</span><span style=\"color: #D8DEE9FF\">)</span><span style=\"color: #81A1C1\">;</span></span>\n<span class=\"line\"><span style=\"color: #D8DEE9FF\">  </span><span style=\"color: #ECEFF4\">}</span></span>\n<span class=\"line\"><span style=\"color: #ECEFF4\">}</span></span></code></pre>\n<p><strong>We changed the WeatherProvider class in\nsuch a way that it only refers to an abstraction, not to a concrete class.</strong></p>\n","tags":[{"title":"JavaScript","path":"/tag/JavaScript/"},{"title":"Software Design","path":"/tag/Software%20Design/"}]}},"context":{}}