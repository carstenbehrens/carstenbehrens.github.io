{"hash":"8e7fdf0679dbc26678fb738edc153f42ec135f58","data":{"post":{"title":"Dependency Inversion Principle in JavaScript and TypeScript","date":"January 18, 2022","content":"<p>In this series of blog posts, I will take a look at SOLID Principles in the context of JavaScript.</p>\n<p><strong>SOLID</strong> is an acronym referring to the SOLID Principles of class design that were\npopularized by Robert C. Martin.</p>\n<h2 id=\"the-dependency-inversion-principle\"><a href=\"#the-dependency-inversion-principle\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>THE DEPENDENCY INVERSION PRINCIPLE</h2>\n<blockquote>\n<p>Modules that encapsulate high-level policy should not depend upon modules\nthat implement details. Rather, both kinds of modules should depend upon\nabstractions.\n<strong>Robert C. Martin</strong></p>\n</blockquote>\n<p>Or in a more simple way:<br>\n<strong>A.</strong> High-level modules should not depend on low-level modules. Both should depend on abstractions.<br>\n<strong>B.</strong> Abstractions should not depend upon details. Details should depend upon abstractions.  </p>\n<p>This means that an abstraction (interface or abstract class) should not depend\non a detail (concrete classes).</p>\n<p>The goal of the DIP is to decouple high-level modules from low-level modules.\nThis safeguards the higher-level modules from possibly breaking changes in\nlower-level modules.</p>\n<p>The best way to explain the DIP is to look at the flow of control of an exemplary\nprogram. Let's say we have an API that allows us to create video courses. We have\na <code>CourseController</code> that handles the routing, validation, and stuff like that.\nThen we have a <code>CourseService</code> that will handle the creation of courses, get courses, and so on...</p>\n<p>The simplified code for a class of such program might look like this:</p>\n<pre class=\"shiki\" style=\"background-color: #2e3440ff\"><code><span class=\"line\"><span style=\"color: #81A1C1\">class</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #8FBCBB\">CourseService</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">{</span></span>\n<span class=\"line\"><span style=\"color: #ECEFF4\">  </span><span style=\"color: #616E88\">// ...</span></span>\n<span class=\"line\"><span style=\"color: #ECEFF4\">}</span></span>\n\n<span class=\"line\"><span style=\"color: #81A1C1\">class</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #8FBCBB\">CourseController</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">{</span></span>\n<span class=\"line\"><span style=\"color: #D8DEE9FF\">  </span><span style=\"color: #81A1C1\">constructor</span><span style=\"color: #ECEFF4\">(</span><span style=\"color: #D8DEE9\">courseService</span><span style=\"color: #81A1C1\">:</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #8FBCBB\">CourseService</span><span style=\"color: #ECEFF4\">)</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">{</span></span>\n<span class=\"line\"><span style=\"color: #D8DEE9FF\">    </span><span style=\"color: #81A1C1\">this</span><span style=\"color: #ECEFF4\">.</span><span style=\"color: #D8DEE9\">courseService</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">=</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #D8DEE9\">courseService</span><span style=\"color: #81A1C1\">;</span></span>\n<span class=\"line\"><span style=\"color: #D8DEE9FF\">  </span><span style=\"color: #ECEFF4\">}</span></span>\n\n<span class=\"line\"><span style=\"color: #D8DEE9FF\">  </span><span style=\"color: #81A1C1\">async</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #88C0D0\">get</span><span style=\"color: #ECEFF4\">()</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">{</span></span>\n<span class=\"line\"><span style=\"color: #ECEFF4\">      </span><span style=\"color: #616E88\">// ...</span></span>\n<span class=\"line\"><span style=\"color: #D8DEE9FF\">        </span><span style=\"color: #81A1C1\">const</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #D8DEE9\">data</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">=</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">await</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #D8DEE9\">courseService</span><span style=\"color: #ECEFF4\">.</span><span style=\"color: #88C0D0\">getCourses</span><span style=\"color: #D8DEE9FF\">()</span></span>\n<span class=\"line\"><span style=\"color: #ECEFF4\">      </span><span style=\"color: #616E88\">// ...</span></span>\n<span class=\"line\"><span style=\"color: #D8DEE9FF\">  </span><span style=\"color: #ECEFF4\">}</span></span>\n<span class=\"line\"><span style=\"color: #ECEFF4\">}</span></span></code></pre>\n<p>In this example we use a constructor function to provide a CourseService to our\nCourseController class. The CourseService then gets used in the <code>get</code> method\nof the CourseController.</p>\n<p>The flow of control looks like this:</p>\n<p><img class=\"g-image g-image--lazy g-image--loading\" src=\"data:image/svg+xml,%3csvg fill='none' viewBox='0 0 401 41' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e%3cdefs%3e%3cfilter id='__svg-blur-b92e83f890b421a795f6add032922cbb'%3e%3cfeGaussianBlur in='SourceGraphic' stdDeviation='40'/%3e%3c/filter%3e%3c/defs%3e%3cimage x='0' y='0' filter='url(%23__svg-blur-b92e83f890b421a795f6add032922cbb)' width='401' height='41' xlink:href='data:image/jpeg%3bbase64%2c/9j/2wBDAAYEBQYFBAYGBQYHBwYIChAKCgkJChQODwwQFxQYGBcUFhYaHSUfGhsjHBYWICwgIyYnKSopGR8tMC0oMCUoKSj/2wBDAQcHBwoIChMKChMoGhYaKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCj/wAARCAAHAEADASIAAhEBAxEB/8QAGAABAQEBAQAAAAAAAAAAAAAAAAEDBAj/xAAiEAABBAEEAwEBAAAAAAAAAAABAgMEEQAFEiFBExRCUbL/xAAUAQEAAAAAAAAAAAAAAAAAAAAA/8QAFBEBAAAAAAAAAAAAAAAAAAAAAP/aAAwDAQACEQMRAD8A9IK02cSdsuGE2KuGCQO%2bd2Q6ZP3pPuQtoIsekOR39YxgdcZLvlk%2buplDXkoJKDwQkX2O7yuo1LfbT8QI/FMqv%2bsYwDaNS8pLj8Qt2aAaVddfWZS25JmQy%2b6wqNvIU2GTalUdpsq4Ao8VzfVYxgZu6dMUslqVDSgk0FQwSB%2bXuyxtOlodQZEiI62CdyUxAkqHXO411jGB/9k=' /%3e%3c/svg%3e\" width=\"401\" alt=\"diagram\" data-srcset=\"/assets/static/flow-of-control-1.9c14a88.c143b15efb53c18a7d74a8a86e88c4e9.jpg 401w\" data-sizes=\"(max-width: 401px) 100vw, 401px\" data-src=\"/assets/static/flow-of-control-1.9c14a88.c143b15efb53c18a7d74a8a86e88c4e9.jpg\"><noscript><img class=\"g-image g-image--lazy g-image--loaded\" src=\"/assets/static/flow-of-control-1.9c14a88.c143b15efb53c18a7d74a8a86e88c4e9.jpg\" width=\"401\" alt=\"diagram\"></noscript></p>\n<p>This means that <strong>a high-level module depends on a low-level module</strong>. The question\nyou have to ask yourself is: Do I want my high-level policy to be polluted by\nlow-level detail?</p>\n<p>Now imagine that CourseService itself depends on other modules which themselves\ndepend on even lower-level modules. A change in one of the low-level modules could\nbreak modules that depend on it.</p>\n<p>To stop this from happening we need to <strong>invert</strong> the dependency. Basically, we will\nadd an interface between the two classes.</p>\n<p>Afterward, the flow of control should look like this:</p>\n<p><img class=\"g-image g-image--lazy g-image--loading\" src=\"data:image/svg+xml,%3csvg fill='none' viewBox='0 0 441 41' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e%3cdefs%3e%3cfilter id='__svg-blur-842812b99b8e1d650aa59f37bc2d7bed'%3e%3cfeGaussianBlur in='SourceGraphic' stdDeviation='40'/%3e%3c/filter%3e%3c/defs%3e%3cimage x='0' y='0' filter='url(%23__svg-blur-842812b99b8e1d650aa59f37bc2d7bed)' width='441' height='41' xlink:href='data:image/jpeg%3bbase64%2c/9j/2wBDAAYEBQYFBAYGBQYHBwYIChAKCgkJChQODwwQFxQYGBcUFhYaHSUfGhsjHBYWICwgIyYnKSopGR8tMC0oMCUoKSj/2wBDAQcHBwoIChMKChMoGhYaKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCj/wAARCAAGAEADASIAAhEBAxEB/8QAGAABAQEBAQAAAAAAAAAAAAAAAAIBAwj/xAAnEAACAQMDAgYDAAAAAAAAAAABAgMABBEFEiEUMRMyQVFhkYGhsf/EABQBAQAAAAAAAAAAAAAAAAAAAAD/xAAUEQEAAAAAAAAAAAAAAAAAAAAA/9oADAMBAAIRAxEAPwD0nNpk7zO0d2iIWyF6ZDgZ7ZpDpkyXCPJdrJGPNH0yDdx7gZFKUESxTtplueoAiDIzJ4YO5M%2bXvx3H1U6jo7uS9mTuZiWV5mRQPjAP1SlB1sNLW3QS3W5pApDJ4hkT9gVlvFcJpdqtzcLOMx7sxAZBYYHf04H4pSgqfTJnlZo7tY0JyF6ZDge2SK23smtg8l1MlwipyvTovI9eP5SlB//Z' /%3e%3c/svg%3e\" width=\"441\" alt=\"diagram\" data-srcset=\"/assets/static/flow-of-control-3.548abcf.bec443998a5f62c1062ee04d8f622f60.jpg 441w\" data-sizes=\"(max-width: 441px) 100vw, 441px\" data-src=\"/assets/static/flow-of-control-3.548abcf.bec443998a5f62c1062ee04d8f622f60.jpg\"><noscript><img class=\"g-image g-image--lazy g-image--loaded\" src=\"/assets/static/flow-of-control-3.548abcf.bec443998a5f62c1062ee04d8f622f60.jpg\" width=\"441\" alt=\"diagram\"></noscript></p>\n<p>And the code:</p>\n<pre class=\"shiki\" style=\"background-color: #2e3440ff\"><code><span class=\"line\"><span style=\"color: #81A1C1\">interface</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #8FBCBB\">ICourseService</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">{</span></span>\n<span class=\"line\"><span style=\"color: #D8DEE9FF\">  </span><span style=\"color: #88C0D0\">getCourses</span><span style=\"color: #ECEFF4\">()</span><span style=\"color: #81A1C1\">:</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #8FBCBB\">Promise</span><span style=\"color: #ECEFF4\">&lt;</span><span style=\"color: #8FBCBB\">ICourse</span><span style=\"color: #ECEFF4\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #ECEFF4\">}</span></span>\n\n<span class=\"line\"><span style=\"color: #81A1C1\">class</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #8FBCBB\">CourseService</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">implements</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #8FBCBB\">ICourseService</span><span style=\"color: #ECEFF4\">{</span></span>\n<span class=\"line\"><span style=\"color: #D8DEE9FF\">  </span><span style=\"color: #88C0D0\">getCourses</span><span style=\"color: #ECEFF4\">()</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">{</span></span>\n<span class=\"line\"><span style=\"color: #ECEFF4\">    </span><span style=\"color: #616E88\">//...</span></span>\n<span class=\"line\"><span style=\"color: #D8DEE9FF\">  </span><span style=\"color: #ECEFF4\">}</span></span>\n<span class=\"line\"><span style=\"color: #ECEFF4\">}</span></span>\n\n<span class=\"line\"><span style=\"color: #81A1C1\">class</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #8FBCBB\">CourseController</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">{</span></span>\n<span class=\"line\"><span style=\"color: #D8DEE9FF\">  </span><span style=\"color: #81A1C1\">constructor</span><span style=\"color: #ECEFF4\">(</span><span style=\"color: #D8DEE9\">courseService</span><span style=\"color: #81A1C1\">:</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #8FBCBB\">ICourseService</span><span style=\"color: #ECEFF4\">)</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">{</span></span>\n<span class=\"line\"><span style=\"color: #D8DEE9FF\">    </span><span style=\"color: #81A1C1\">this</span><span style=\"color: #ECEFF4\">.</span><span style=\"color: #D8DEE9\">courseService</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">=</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #D8DEE9\">courseService</span><span style=\"color: #81A1C1\">;</span></span>\n<span class=\"line\"><span style=\"color: #D8DEE9FF\">  </span><span style=\"color: #ECEFF4\">}</span></span>\n\n<span class=\"line\"><span style=\"color: #D8DEE9FF\">  </span><span style=\"color: #81A1C1\">async</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #88C0D0\">get</span><span style=\"color: #ECEFF4\">()</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">{</span></span>\n<span class=\"line\"><span style=\"color: #ECEFF4\">    </span><span style=\"color: #616E88\">// ...</span></span>\n<span class=\"line\"><span style=\"color: #D8DEE9FF\">    </span><span style=\"color: #81A1C1\">const</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #D8DEE9\">data</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">=</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">await</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #D8DEE9\">courseService</span><span style=\"color: #ECEFF4\">.</span><span style=\"color: #88C0D0\">getCourses</span><span style=\"color: #D8DEE9FF\">()</span></span>\n<span class=\"line\"><span style=\"color: #ECEFF4\">    </span><span style=\"color: #616E88\">// ...</span></span>\n<span class=\"line\"><span style=\"color: #D8DEE9FF\">  </span><span style=\"color: #ECEFF4\">}</span></span>\n<span class=\"line\"><span style=\"color: #ECEFF4\">}</span></span></code></pre>\n<p><strong>We changed the CourseController class in such a way that it only refers to an abstraction of the\nCourseService (the interface ICourseService), not to a concrete class.</strong></p>\n","tags":[{"title":"JavaScript","path":"/tag/JavaScript/"},{"title":"TypeScript","path":"/tag/TypeScript/"},{"title":"Software Design","path":"/tag/Software%20Design/"}]}},"context":{}}