{"hash":"bb7614b51e1677ad8e87a3127852889df016138e","data":{"posts":{"totalCount":37,"pageInfo":{"totalPages":7,"currentPage":5},"edges":[{"node":{"id":"432c07a858ef3d4fb68c44eab9fe2806","title":"What is a Closure in JavaScript","date":"March 17, 2020","summary":"Short explanation of Closure in JavaScript","timeToRead":1,"path":"/closure-in-javascript"}},{"node":{"id":"d4c5f70fa64b4d15e1865103017b9df7","title":"What is a Lambda Function in JavaScript","date":"February 27, 2020","summary":"Short explanation of Lambda expressions in JavaScript.","timeToRead":1,"path":"/lambda-in-javascript"}},{"node":{"id":"7359d175ca19553ae2fa49e23d6657e5","title":"How to render an Array in React","date":"January 28, 2020","summary":"Let's say you have an array like this...","timeToRead":1,"path":"/render-an-array-in-react"}},{"node":{"id":"371733d5b628730b70568aef8436d37f","title":"Dependency Inversion Principle in JavaScript and TypeScript","date":"January 15, 2020","summary":"Interface Segregation Principle in the context of JavaScript and TypeScript.","timeToRead":2,"path":"/dependency-inversion-principle"}},{"node":{"id":"e61b33cc76cbcd14da563ebd357d76ad","title":"Interface Segregation Principle in JavaScript and TypeScript","date":"January 8, 2020","summary":"Interface Segregation Principle in the context of JavaScript and TypeScript.","timeToRead":2,"path":"/interface-segregation"}},{"node":{"id":"bdb831534bd5105614664a69cdeacab5","title":"Liskov Substitution Principle in JavaScript and TypeScript","date":"January 6, 2020","summary":"The Liskov Substitution Principle in the context of JavaScript and TypeScript.","timeToRead":2,"path":"/liskov-substitution-principle"}}]}},"context":{}}