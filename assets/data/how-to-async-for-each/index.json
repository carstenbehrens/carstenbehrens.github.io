{"hash":"0114f84967cb0b95868f9577864552a4a8872f0e","data":{"post":{"title":"Async forEach","date":"September 9, 2021","content":"<p>Consider this piece of JavaScript code:</p>\n<pre class=\"shiki\" style=\"background-color: #2e3440ff\"><code><span class=\"line\"><span style=\"color: #81A1C1\">function</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #88C0D0\">greetApi</span><span style=\"color: #ECEFF4\">(</span><span style=\"color: #D8DEE9\">name</span><span style=\"color: #ECEFF4\">)</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">{</span></span>\n<span class=\"line\"><span style=\"color: #D8DEE9FF\">    </span><span style=\"color: #81A1C1\">return</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">new</span><span style=\"color: #D8DEE9FF\"> Promise(</span><span style=\"color: #ECEFF4\">(</span><span style=\"color: #D8DEE9\">resolve</span><span style=\"color: #ECEFF4\">)</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">=&gt;</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #88C0D0\">setTimeout</span><span style=\"color: #D8DEE9FF\">(</span><span style=\"color: #88C0D0\">resolve</span><span style=\"color: #D8DEE9FF\">(</span><span style=\"color: #ECEFF4\">`</span><span style=\"color: #A3BE8C\">Hello </span><span style=\"color: #81A1C1\">${</span><span style=\"color: #D8DEE9\">name</span><span style=\"color: #81A1C1\">}</span><span style=\"color: #A3BE8C\">!</span><span style=\"color: #ECEFF4\">`</span><span style=\"color: #D8DEE9FF\">)</span><span style=\"color: #ECEFF4\">,</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #B48EAD\">300</span><span style=\"color: #D8DEE9FF\">))</span><span style=\"color: #81A1C1\">;</span></span>\n<span class=\"line\"><span style=\"color: #ECEFF4\">}</span></span>\n\n<span class=\"line\"><span style=\"color: #81A1C1\">const</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #D8DEE9\">test</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">=</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">await</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #88C0D0\">greetApi</span><span style=\"color: #D8DEE9FF\">(</span><span style=\"color: #ECEFF4\">&quot;</span><span style=\"color: #A3BE8C\">Brandan Eich</span><span style=\"color: #ECEFF4\">&quot;</span><span style=\"color: #D8DEE9FF\">)</span><span style=\"color: #81A1C1\">;</span></span>\n\n<span class=\"line\"><span style=\"color: #D8DEE9\">console</span><span style=\"color: #ECEFF4\">.</span><span style=\"color: #88C0D0\">log</span><span style=\"color: #D8DEE9FF\">(</span><span style=\"color: #D8DEE9\">test</span><span style=\"color: #D8DEE9FF\">)</span><span style=\"color: #81A1C1\">;</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #616E88\">// &quot;Hello Brendan Eich!&quot;</span></span></code></pre>\n<p>We call an asynchronous function we use the <code>await</code> keyword to wait for the promise to resolve and the log the result\nof that promise. Easy enough...</p>\n<p>Now consider this piece of code:</p>\n<pre class=\"shiki\" style=\"background-color: #2e3440ff\"><code><span class=\"line\"><span style=\"color: #81A1C1\">const</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #D8DEE9\">names</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">=</span><span style=\"color: #D8DEE9FF\"> [</span><span style=\"color: #ECEFF4\">&#39;</span><span style=\"color: #A3BE8C\">Lance</span><span style=\"color: #ECEFF4\">&#39;</span><span style=\"color: #ECEFF4\">,</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">&#39;</span><span style=\"color: #A3BE8C\">Luke</span><span style=\"color: #ECEFF4\">&#39;</span><span style=\"color: #ECEFF4\">,</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">&#39;</span><span style=\"color: #A3BE8C\">Lisa</span><span style=\"color: #ECEFF4\">&#39;</span><span style=\"color: #D8DEE9FF\">]</span></span>\n<span class=\"line\"><span style=\"color: #81A1C1\">const</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #D8DEE9\">result</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">=</span><span style=\"color: #D8DEE9FF\"> []</span></span>\n\n<span class=\"line\"><span style=\"color: #D8DEE9\">names</span><span style=\"color: #ECEFF4\">.</span><span style=\"color: #88C0D0\">forEach</span><span style=\"color: #D8DEE9FF\">(</span><span style=\"color: #81A1C1\">async</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #D8DEE9\">name</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">=&gt;</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">{</span></span>\n<span class=\"line\"><span style=\"color: #D8DEE9FF\">  </span><span style=\"color: #81A1C1\">const</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #D8DEE9\">greeting</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">=</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">await</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #88C0D0\">greetApi</span><span style=\"color: #D8DEE9FF\">(</span><span style=\"color: #D8DEE9\">name</span><span style=\"color: #D8DEE9FF\">)</span></span>\n<span class=\"line\"><span style=\"color: #D8DEE9FF\">  </span><span style=\"color: #D8DEE9\">result</span><span style=\"color: #ECEFF4\">.</span><span style=\"color: #88C0D0\">push</span><span style=\"color: #D8DEE9FF\">(</span><span style=\"color: #D8DEE9\">greeting</span><span style=\"color: #D8DEE9FF\">)</span></span>\n<span class=\"line\"><span style=\"color: #ECEFF4\">}</span><span style=\"color: #D8DEE9FF\">)</span><span style=\"color: #81A1C1\">;</span></span>\n\n<span class=\"line\"><span style=\"color: #D8DEE9\">console</span><span style=\"color: #ECEFF4\">.</span><span style=\"color: #88C0D0\">log</span><span style=\"color: #D8DEE9FF\">(</span><span style=\"color: #D8DEE9\">result</span><span style=\"color: #D8DEE9FF\">)</span><span style=\"color: #81A1C1\">;</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #616E88\">// &quot;[]&quot;</span></span></code></pre>\n<p>Save to say this behavior was not what I expected.\nAnd I proceeded to spend an embarrassing amount of time trying to look for a bug in other areas of my code...</p>\n<p>To save you some time here is how you fix this issue:</p>\n<pre class=\"shiki\" style=\"background-color: #2e3440ff\"><code><span class=\"line\"><span style=\"color: #81A1C1\">const</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #D8DEE9\">names</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">=</span><span style=\"color: #D8DEE9FF\"> [</span><span style=\"color: #ECEFF4\">&#39;</span><span style=\"color: #A3BE8C\">Lance</span><span style=\"color: #ECEFF4\">&#39;</span><span style=\"color: #ECEFF4\">,</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">&#39;</span><span style=\"color: #A3BE8C\">Luke</span><span style=\"color: #ECEFF4\">&#39;</span><span style=\"color: #ECEFF4\">,</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">&#39;</span><span style=\"color: #A3BE8C\">Lisa</span><span style=\"color: #ECEFF4\">&#39;</span><span style=\"color: #D8DEE9FF\">]</span></span>\n\n<span class=\"line\"><span style=\"color: #81A1C1\">const</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #D8DEE9\">result</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">=</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">await</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #8FBCBB\">Promise</span><span style=\"color: #ECEFF4\">.</span><span style=\"color: #88C0D0\">all</span><span style=\"color: #D8DEE9FF\">(</span><span style=\"color: #D8DEE9\">names</span><span style=\"color: #ECEFF4\">.</span><span style=\"color: #88C0D0\">map</span><span style=\"color: #D8DEE9FF\">(</span><span style=\"color: #81A1C1\">async</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">(</span><span style=\"color: #D8DEE9\">n</span><span style=\"color: #ECEFF4\">)</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">=&gt;</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">await</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #88C0D0\">greetApi</span><span style=\"color: #D8DEE9FF\">(</span><span style=\"color: #D8DEE9\">n</span><span style=\"color: #D8DEE9FF\">)))</span></span>\n\n<span class=\"line\"><span style=\"color: #D8DEE9\">console</span><span style=\"color: #ECEFF4\">.</span><span style=\"color: #88C0D0\">log</span><span style=\"color: #D8DEE9FF\">(</span><span style=\"color: #D8DEE9\">result</span><span style=\"color: #D8DEE9FF\">)</span><span style=\"color: #81A1C1\">;</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #616E88\">// &quot;[ &#39;Hello Lance!&#39;, &#39;Hello Luke!&#39;, &#39;Hello Lisa!&#39; ]&quot;</span></span></code></pre>\n<p><strong>But Why</strong></p>\n<p>If you take some times think about this, it makes perfect sense.</p>\n<p>The forEach method executes the asynchronous function that we provided, but a forEach method also does\nnot return anything. That's why we cannot wait for all the Promises to be finished.</p>\n","tags":[{"title":"JavaScript","path":"/tag/JavaScript/"},{"title":"Frontend","path":"/tag/Frontend/"},{"title":"Backend","path":"/tag/Backend/"}]}},"context":{}}